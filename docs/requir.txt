1. bybit의 api를 연결하여 btc/usdt 바이빗 데이터를수집하고 챗지피티에게
 데이터를 줘서 챗지피티의 판단에 따라 자동으로 매매를 실행한다. 수익률 목표는 월30% 이상.
 향후에는 기존 거래를 바탕으로 재귀, 회고 개선이 되었으면 한다.
 
 가져오는 데이터는 15분봉: 64개 (16시간), 1시간봉: 48개 (2일), 4시간봉: 90개 (15일), 일봉: 45개 (1.5개월)
 지피티의 분석은 15m, 1h, 4h, 1d 마다 자동분석을 실행하고 마지막 분석은 Aibybit/analysis_data 에저장한다. 
 그리고 4h 분석이 나올때마다 저장된 각시간대 분석을 지피티에게 주어서 final 분석을 하고 
 final 분석을 매매신호로 삼아 자동매매를 한다. 
            
 그리고 각 시간대 분석은 한국시간 4시간봉: 매일 1시, 5시, 9시, 13시, 17시, 21시에, 일봉: 매일 오전 1시에 분석한다.

2. 텔레그램 봇으로 현재 포지션, 주문내역등 알려준다. 명령어는 /help, /stop,
/status, /balance, /position, /analyze [timeframe], /last [timeframe], /trade 이 있다.

현재 기능구현중 멈춰진상태 : 향후 구현해야함
/stats 명령어 추가 - 수익률 표시 
   A. 실시간으로 수익률을 모니터링하고 특정 기준에 도달하면 알림
   B. 모든 거래 기록을 저장하고 통계 제공
   C. /stats 명령어로 언제든 거래 통계 확인 가능
 
 
3. final분석을 자동매매의 신호로 삼아 자동매매 진행해야함.자동매매시에 이미 포지션이 있는경우 레버러지가 서로 다른문제는
레버러지와 방향이 다른경우는 지정가 청산하고 새로진입하고 레버러지와 방향이 같은경우만 포지션크기를 가감한다.
   
├─ 포지션 없음 → open_new_position()
└─ 포지션 있음 → _handle_existing_position()
   ├─ 같은 방향
   │  ├─ 같은 레버리지 → adjust_position_size() (크기만 조정)
   │  └─ 다른 레버리지 → close_position() → open_new_position()
   └─ 반대 방향 → close_position() → open_new_position()


4. 자동분석을 먼저 개발하고 테스트를 위해 /analyze 수동분석을 만들고, 자동매매를 만든후에 테스트를 위해 /trade 수동매매를 
만들었더니 자동분석과 수동분석, 자동매매와 수동매매의 로직이 겹쳐서 통일함. 현재도 겹치는 코드가 있으면 제거해야함.

모든수정은 기존코드 확인하고 수정하고 에러가 발생하면 원인과 해결책을 제시하고 동의후 수정.


  
